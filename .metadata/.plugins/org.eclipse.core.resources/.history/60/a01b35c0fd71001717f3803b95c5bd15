package cn.iverson.erp.biz.impl;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;

import cn.iverson.erp.biz.IOrdersBiz;
import cn.iverson.erp.biz.exception.ErpException;
import cn.iverson.erp.dao.IEmpDao;
import cn.iverson.erp.dao.IOrdersDao;
import cn.iverson.erp.dao.ISupplierDao;
import cn.iverson.erp.entity.Orderdetail;
import cn.iverson.erp.entity.Orders;
/**
 * 订单业务逻辑类
 * @author Administrator
 *
 */
public class OrdersBiz extends BaseBiz<Orders> implements IOrdersBiz {

	private IOrdersDao ordersDao;
	private IEmpDao empDao;
	private ISupplierDao supplierDao;
	
	public void setOrdersDao(IOrdersDao ordersDao) {
		this.ordersDao = ordersDao;
		super.setBaseDao(this.ordersDao);
	}
	
	public void add(Orders orders){
		//补齐所有缺损的参数
		//生成订单的日期
		orders.setCreatetime(new Date());
		//订单的状态
		orders.setState(Orders.STATE_CREATE);
		//订单类型
		//orders.setType(Orders.TYPE_IN);
		//合计金额
		double totalMoney = 0;
		for(Orderdetail orderdetail:orders.getOrderdetails()){
			totalMoney += orderdetail.getMoney();
			orderdetail.setOrders(orders);
			orderdetail.setState(Orderdetail.STATE_NOT_IN);
		}
		//合计金额set给Orders
		orders.setTotalmoney(totalMoney);
		ordersDao.add(orders);
	}
	
	public List<Orders> getListByPage(Orders t1,Orders t2,Object param,int firstResult,int maxResults){
		List<Orders> ordersList = super.getListByPage(t1, t2, param, firstResult, maxResults);
		Map<Long,String> empNameMap = new HashMap<Long,String>();
		Map<Long,String> supplierNameMap = new HashMap<Long,String>();
		for(Orders o:ordersList){
			o.setCreaterName(getEmpName(o.getCreater(), empNameMap));
			o.setCheckerName(getEmpName(o.getChecker(), empNameMap));
			o.setStarterName(getEmpName(o.getStarter(), empNameMap));
			o.setEnderName(getEmpName(o.getEnder(), empNameMap));
			o.setSupplierName(getSupplierName(o.getSupplieruuid(), supplierNameMap));
		}
		return super.getListByPage(t1, t2, param, firstResult, maxResults);
	}
	
	@Override
	public void doCheck(Long uuid, Long empUuid) {
		//获取订单信息
		Orders orders = ordersDao.get(uuid);
		if(!Orders.STATE_CREATE.equals(orders.getState())){
			throw new ErpException("该订单已经审核过了");
		}
		//更新审核人名字
		orders.setChecker(empUuid);
		//更新审核时间
		orders.setChecktime(new Date());
		//更新状态
		orders.setState(Orders.STATE_CHECK);
	}
	
	@Override
	public void doStart(Long uuid, Long empUuid) {
		//获取订单信息
		Orders orders = ordersDao.get(uuid);
		if(!Orders.STATE_CHECK.equals(orders.getState())){
			throw new ErpException("该订单已经确认过了");
		}
		//更新审核人名字
		orders.setStarter(empUuid);
		//更新审核时间
		orders.setStarttime(new Date());
		//更新状态
		orders.setState(Orders.STATE_START);
	}
	/**
	 * 
	 * @param uuid 用户的编号
	 * @param supplierNameMap 缓存用户的编号：用户的名称
	 * @return
	 */
	private String getEmpName(Long uuid,Map<Long,String> empNameMap){
		if(null == uuid){
			return null;
		}
		String empName = empNameMap.get(uuid);
		if(null == empName){
			empName = empDao.get(uuid).getName();
			empNameMap.put(uuid, empName);
		}
		return empName;
	}
	/**
	 * 
	 * @param uuid 供应商的编号
	 * @param supplierNameMap 缓存供应商的编号：供应商的名称
	 * @return
	 */
	private String getSupplierName(Long uuid,Map<Long,String> supplierNameMap){
		if(null == uuid){
			return null;
		}
		String supplierName = supplierNameMap.get(uuid);
		if(null == supplierName){
			supplierName = supplierDao.get(uuid).getName();
			supplierNameMap.put(uuid, supplierName);
		}
		return supplierName;
	}
	
	@SuppressWarnings("deprecation")
	@Override
	public void exportById(OutputStream os, Long uuid) throws Exception {
		Orders orders = ordersDao.get(uuid);
		//工作簿
		HSSFWorkbook hssfWorkbook = new HSSFWorkbook();
		//表
		HSSFSheet hssfSheet = hssfWorkbook.createSheet("采购订单");
		//内容样式
		HSSFCellStyle hssfCellStyle_content = hssfWorkbook.createCellStyle();
		//内容边框样式
		hssfCellStyle_content.setBorderBottom(HSSFCellStyle.BORDER_THIN);//下边框
		hssfCellStyle_content.setBorderTop(HSSFCellStyle.BORDER_THIN);//上边框
		hssfCellStyle_content.setBorderLeft(HSSFCellStyle.BORDER_THIN);//左边框
		hssfCellStyle_content.setBorderRight(HSSFCellStyle.BORDER_THIN);//右边框
		//内容位置样式
		hssfCellStyle_content.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
		hssfCellStyle_content.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
		//内容字体样式设置
		HSSFFont hssfFont_content = hssfWorkbook.createFont();//创建字体
		hssfFont_content.setFontName("宋体");//设置字体
		hssfFont_content.setFontHeightInPoints((short)12);//设置字体大小
		hssfCellStyle_content.setFont(hssfFont_content);//放回框内
		
		//标题样式
		HSSFCellStyle hssfCellStyle_title = hssfWorkbook.createCellStyle();
		hssfCellStyle_title.setAlignment(HSSFCellStyle.ALIGN_CENTER);//水平居中
		hssfCellStyle_title.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);//垂直居中
		//标题字体样式
		HSSFFont hssfFont_title = hssfWorkbook.createFont();//创建字体
		hssfFont_title.setFontName("微软雅黑");//设置字体
		hssfFont_title.setBold(true);//加粗
		hssfFont_title.setFontHeightInPoints((short)18);//大小
		hssfCellStyle_title.setFont(hssfFont_title);
		hssfSheet.createRow(0).createCell(0).setCellStyle(hssfCellStyle_title);
		
		// 根据导出的订单样本创建10行4列
	
		int rowCnt = 10 + orders.getOrderdetails().size();
		for(int i = 2;i < rowCnt;i++){
			HSSFRow hssfRow = hssfSheet.createRow(i);
			for(int j = 0;j < 4;j++){
				HSSFCell hssfCell = hssfRow.createCell(j);
				hssfCell.setCellStyle(hssfCellStyle_content);
			}
		}
		
		//日期格式
		HSSFCellStyle hssfCellStyle_date = hssfWorkbook.createCellStyle();
		hssfCellStyle_date.cloneStyleFrom(hssfCellStyle_content);
		HSSFDataFormat hssfDataFormat = hssfWorkbook.createDataFormat();
		hssfCellStyle_date.setDataFormat(hssfDataFormat.getFormat("yyyy-MM-dd hh:mm"));
		for(int i = 3;i<7;i++){
			hssfSheet.getRow(i).getCell(1).setCellStyle(hssfCellStyle_date);
		}
		hssfSheet.getRow(3).getCell(1).setCellValue(new Date());
		//合并单元格
		hssfSheet.addMergedRegion(new CellRangeAddress(0,0,0,3));//标题
		hssfSheet.addMergedRegion(new CellRangeAddress(2,2,1,3));//供应商
		hssfSheet.addMergedRegion(new CellRangeAddress(7,7,0,3));//订单明细
		//设置各个单元格的内容
		hssfSheet.getRow(0).getCell(0).setCellValue("采购单");
		//供应商设值
		hssfSheet.getRow(2).getCell(0).setCellValue("供应商");
		hssfSheet.getRow(2).getCell(1).setCellValue(supplierDao.get(orders.getSupplieruuid()).getName());
		
		//下单
		hssfSheet.getRow(3).getCell(0).setCellValue("下单日期");
		if(null != orders.getCreatetime()){
			hssfSheet.getRow(3).getCell(1).setCellValue(orders.getCreater());
		}
		hssfSheet.getRow(3).getCell(2).setCellValue("经办人");
		if(null != orders.getCreater()){
			hssfSheet.getRow(3).getCell(3).setCellValue(empDao.get(orders.getCreater()).getName());
		}
		
		//审核
		hssfSheet.getRow(4).getCell(0).setCellValue("审核日期");
		if(null != orders.getChecktime()){
			hssfSheet.getRow(4).getCell(1).setCellValue(orders.getChecktime());
		}
		hssfSheet.getRow(4).getCell(2).setCellValue("供应商");
		if(null != orders.getChecker()){
			hssfSheet.getRow(4).getCell(3).setCellValue(empDao.get(orders.getChecker()).getName());
		}
		
		//采购
		hssfSheet.getRow(5).getCell(0).setCellValue("采购日期");
		if(null != orders.getStarttime()){
			hssfSheet.getRow(5).getCell(1).setCellValue(orders.getStarttime());
		}
		hssfSheet.getRow(5).getCell(2).setCellValue("经办人");
		if(null != orders.getStarter()){
			hssfSheet.getRow(5).getCell(3).setCellValue(empDao.get(orders.getStarter()).getName());
		}
		
		hssfSheet.getRow(6).getCell(0).setCellValue("入库日期");
		if(null != orders.getEndtime()){
			hssfSheet.getRow(6).getCell(1).setCellValue(orders.getEndtime());
		}
		hssfSheet.getRow(6).getCell(2).setCellValue("经办人");
		if(null != orders.getEnder()){
			hssfSheet.getRow(6).getCell(3).setCellValue(empDao.get(orders.getEnder()).getName());
		}
		
		
		//订单明细赋值
		int rowIndex = 9;
		HSSFRow hssfRow = null;
		for(Orderdetail orderdetail : orders.getOrderdetails()){
			hssfRow = hssfSheet.getRow(rowIndex);
			hssfRow.getCell(0).setCellValue(orderdetail.getGoodsname());
			hssfRow.getCell(1).setCellValue(orderdetail.getNum());
			hssfRow.getCell(2).setCellValue(orderdetail.getPrice());
			hssfRow.getCell(3).setCellValue(orderdetail.getMoney());
			rowIndex++
		}
		//合计
		hssfSheet.getRow(rowIndex).getCell(0).setCellValue("合计");
		hssfSheet.getRow(rowIndex).getCell(3).setCellValue(orders.getTotalmoney());
		hssfSheet.getRow(7).getCell(0).setCellValue("订单明细");
		
		hssfSheet.getRow(8).getCell(0).setCellValue("商品名称");
		hssfSheet.getRow(8).getCell(1).setCellValue("数量");
		hssfSheet.getRow(8).getCell(2).setCellValue("价格");
		hssfSheet.getRow(8).getCell(3).setCellValue("金额");
		
		//设置行高和列宽
		hssfSheet.getRow(0).setHeight((short)1000);
		//设置内容部分的行高
		for(int i = 2;i<12;i++){
			hssfSheet.getRow(i).setHeight((short)500);
		}
		//设置列宽
		for(int i = 0;i<4;i++){
			hssfSheet.setColumnWidth(i, 5000);
		}
		//保存工作簿Dao"f:\\采购订单.xls"
		hssfWorkbook.write(os);
		hssfWorkbook.close();
	}

	public IEmpDao getEmpDao() {
		return empDao;
	}

	public void setEmpDao(IEmpDao empDao) {
		this.empDao = empDao;
	}

	public ISupplierDao getSupplierDao() {
		return supplierDao;
	}

	public void setSupplierDao(ISupplierDao supplierDao) {
		this.supplierDao = supplierDao;
	}

	
	
}
